{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAQ5C,MAAM,OAAO,oBAAqB,SAAQ,SAAS;IACjD;QACE,KAAK,CAAC;YACJ,IAAI,EAAE,mBAAmB;YACzB,SAAS,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,oBAAoB,CAAC,OAAoC;QAC7D,OAAO,CAAC,IAAI,CAAC,+DAA+D,EAAE,OAAO,CAAC,CAAC;QACvF,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC;IAED,KAAK,CAAC,eAAe;QACnB,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;QAC1D,OAAO,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC;IAC9B,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,OAAwB;QACtC,OAAO,CAAC,IAAI,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAC;QACpD,OAAO;IACT,CAAC;IAED,KAAK,CAAC,SAAS;QACb,OAAO,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QAC1C,OAAO;IACT,CAAC;IAED,KAAK,CAAC,UAAU;QACd,OAAO,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QAC3C,OAAO;IACT,CAAC;IAED,KAAK,CAAC,SAAS;QACb,OAAO,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QAC1C,OAAO;IACT,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,OAA6B;QAC3C,OAAO,CAAC,IAAI,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAC;QACpD,OAAO;IACT,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,OAAkC;QAClD,OAAO,CAAC,IAAI,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAC;QACtD,OAAO;IACT,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,OAAkC;QACnD,OAAO,CAAC,IAAI,CAAC,+BAA+B,EAAE,OAAO,CAAC,CAAC;QACvD,OAAO;IACT,CAAC;IAED,KAAK,CAAC,kBAAkB;QACtB,OAAO,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;QACnD,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,WAAW;QACf,OAAO,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAC5C,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;IACzB,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport type {\n  DirectoryAnalyzerPlugin,\n  ListFilesInDirectoryOptions,\n  ListFilesResult,\n  SelectDirectoryResult,\n} from './definitions';\n\nexport class DirectoryAnalyzerWeb extends WebPlugin implements DirectoryAnalyzerPlugin {\n  constructor() {\n    super({\n      name: 'DirectoryAnalyzer',\n      platforms: ['web'],\n    });\n  }\n\n  async listFilesInDirectory(options: ListFilesInDirectoryOptions): Promise<ListFilesResult> {\n    console.warn(`listFilesInDirectory is not implemented on web with options: `, options);\n    return { files: [] };\n  }\n\n  async selectDirectory(): Promise<SelectDirectoryResult> {\n    console.warn(`selectDirectory is not implemented on web`);\n    return { directoryUri: '' };\n  }\n\n  async loadAudio(options: { uri: string }): Promise<void>{\n    console.warn(`loadAudio not implemented `, options);\n    return;\n  }\n\n  async playAudio(): Promise<void>{\n    console.warn(`playAudio not implemented`);\n    return;\n  }\n\n  async pauseAudio(): Promise<void>{\n    console.warn(`pauseAudio not implemented`);\n    return;\n  }\n\n  async stopAudio(): Promise<void>{\n    console.warn(`stopAudio not implemented`);\n    return;\n  }\n\n  async seekAudio(options: { position: number }): Promise<void>{\n    console.warn(`seekAudio not implemented `, options);\n    return;\n  }\n\n  async skipForward(options: { milliseconds?: number }): Promise<void>{\n    console.warn(`skipForward not implemented `, options);\n    return;\n  }\n\n  async skipBackward(options: { milliseconds?: number }): Promise<void>{\n    console.warn(`skipBackward not implemented `, options);\n    return;\n  }\n\n  async getCurrentPosition(): Promise<{ position: number }>{\n    console.warn(`getCurrentPosition not implemented`);\n    return { position: 0 };\n  }\n\n  async getDuration(): Promise<{ duration: number }>{\n    console.warn(`getDuration not implemented`);\n    return { duration: 0 };\n  }\n}\n"]}